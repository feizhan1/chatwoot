# service.sjlpj.cn 域名环境配置
# 基于原有 .env.production 配置，适配域名访问

# Docker Compose 生产环境配置
# 了解各种环境变量详细信息，请访问
# https://www.chatwoot.com/docs/self-hosted/configuration/environment-variables/#rails-production-variables

# 用于验证签名 cookies 的完整性，请确保设置一个安全值
# SECRET_KEY_BASE 应为字母数字。避免特殊字符或符号
# 使用 `rake secret` 生成此变量
SECRET_KEY_BASE=785d4eabd7bac59ad525d0b3822e3ba1ebb98759cea2d6efb8a392b7a7c4bb167ca92551c656b5d88850ac2d8e12f65138360d6727c4fd33402ebc52427ce2a4

# 替换为您的域名URL
FRONTEND_URL=https://service.sjlpj.cn
# 使用专用 URL 用于帮助中心页面
HELPCENTER_URL=https://service.sjlpj.cn

# 如果设置了此变量，所有未认证页面都将回退到默认语言环境
# 每当创建新账户时，默认语言将是 DEFAULT_LOCALE 而不是 en
# DEFAULT_LOCALE=en

# 如果您计划为您的资源使用 CDN，请设置 Asset CDN 主机
ASSET_CDN_HOST=

# 强制所有应用程序访问都使用 SSL，启用 HTTPS
FORCE_SSL=false

# 这让您可以控制在您的 chatwoot 安装上的新用户注册
# true：默认选项，允许注册
# false：禁用所有与注册相关的端点
# api_only：禁用注册的 UI，但您可以通过账户 API 创建注册
ENABLE_ACCOUNT_SIGNUP=false

# Docker Compose 生产环境的 Redis 配置
# Redis URL 应指向 docker-compose 中的 redis 服务
REDIS_URL=redis://:421124@redis:6379
# 在生产环境中为 Redis 设置安全密码
REDIS_PASSWORD=421124
# 可以通过传递 sentinel 主机和端口列表来使用 Redis Sentinel，例如 sentinel_host1:port1,sentinel_host2:port2
REDIS_SENTINELS=
# 使用 sentinel 时需要 Redis sentinel 主名，默认值是 "mymaster"
# 您可以使用 "SENTINEL masters" 命令找到主列表
REDIS_SENTINEL_MASTER_NAME=

# 默认情况下，Chatwoot 将传递 REDIS_PASSWORD 作为 sentinel 的密码值
# 使用以下环境变量为 sentinel 自定义密码
# 如果 sentinel 配置时没有密码，请使用空字符串
# REDIS_SENTINEL_PASSWORD=

# Heroku 中 Redis premium 中断修复
# 启用以下配置
# 参考：https://github.com/chatwoot/chatwoot/issues/2420
# REDIS_OPENSSL_VERIFY_MODE=none

# Docker Compose 生产环境的 Postgres 数据库配置变量
# 数据库应指向 docker-compose 中的 postgres 服务
POSTGRES_DATABASE=chatwoot
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_USERNAME=postgres
POSTGRES_PASSWORD=421124
RAILS_ENV=production
# 更改 Postgres 查询超时限制。默认为 14 秒。仅在需要时修改。
# POSTGRES_STATEMENT_TIMEOUT=14s
RAILS_MAX_THREADS=5

# 所有传出邮件的发送邮箱
# 可以使用 `email@yourdomain.com` 或 `BrandName <email@yourdomain.com>`
MAILER_SENDER_EMAIL=Tvcmall <1529212832@qq.com>

#SMTP 域密钥设置用于 HELO 检查
SMTP_DOMAIN=qq.com
# QQ邮箱SMTP服务器配置
SMTP_ADDRESS=smtp.qq.com
SMTP_PORT=587
SMTP_USERNAME=1529212832@qq.com
SMTP_PASSWORD=aucdbpgrxfjkgece
# plain,login,cram_md5
SMTP_AUTHENTICATION=login
SMTP_ENABLE_STARTTLS_AUTO=true
# 可以是：'none', 'peer', 'client_once', 'fail_if_no_peer_cert'，见 http://api.rubyonrails.org/classes/ActionMailer/Base.html
SMTP_OPENSSL_VERIFY_MODE=peer
# 如果您的 SMTP 服务器需要，请注释掉以下环境变量
# SMTP_TLS=
# SMTP_SSL=
# SMTP_OPEN_TIMEOUT
# SMTP_READ_TIMEOUT

# 邮件收件
# 这是启用对话连续性时回复邮件设置的域
MAILER_INBOUND_EMAIL_DOMAIN=
# 将此设置为与传入邮件相关的适当入口通道
# 可能的值有：
# relay 用于 Exim、Postfix、Qmail
# mailgun 用于 Mailgun
# mandrill 用于 Mandrill
# postmark 用于 Postmark
# sendgrid 用于 Sendgrid
RAILS_INBOUND_EMAIL_SERVICE=
# 基于邮件入口服务使用以下之一
# 参考：https://edgeguides.rubyonrails.org/action_mailbox_basics.html
# 将此设置为您选择的密码，并在入口 webhook 中使用它
RAILS_INBOUND_EMAIL_PASSWORD=

MAILGUN_INGRESS_SIGNING_KEY=
MANDRILL_INGRESS_API_KEY=

# 为 Postmark 和 Sendgrid 创建入口 Webhook 说明：
# 入口 webhook URL 格式：
#    https://actionmailbox:[YOUR_RAILS_INBOUND_EMAIL_PASSWORD]@[YOUR_CHATWOOT_DOMAIN.COM]/rails/action_mailbox/[RAILS_INBOUND_EMAIL_SERVICE]/inbound_emails
# 注意：替换括号内的值；不要包括括号本身。
# 示例：https://actionmailbox:mYRandomPassword3@service.sjlpj.cn/rails/action_mailbox/postmark/inbound_emails
# 对于 Postmark
# 确保在入口 webhook 部分选择"在 JSON 有效负载中包含原始邮件内容"复选框。

# 存储
ACTIVE_STORAGE_SERVICE=local

# Amazon S3
# 文档：https://www.chatwoot.com/docs/configuring-s3-bucket-as-cloud-storage
S3_BUCKET_NAME=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=

# 日志设置
# 为 Docker 启用输出到 stdout 的日志
RAILS_LOG_TO_STDOUT=true
LOG_LEVEL=info
LOG_SIZE=500
# 如果您想使用 lograge 而不是 rails logger，请配置此环境变量
#LOGRAGE_ENABLED=true

### 以下环境变量仅在设置社交媒体通道时才需要

# Facebook
# 文档：https://www.chatwoot.com/docs/facebook-setup
FB_VERIFY_TOKEN=
FB_APP_SECRET=
FB_APP_ID=

# https://developers.facebook.com/docs/messenger-platform/instagram/get-started#app-dashboard
IG_VERIFY_TOKEN=

# Twitter
# 文档：https://www.chatwoot.com/docs/twitter-app-setup
TWITTER_APP_ID=
TWITTER_CONSUMER_KEY=
TWITTER_CONSUMER_SECRET=
TWITTER_ENVIRONMENT=

#Slack 集成
SLACK_CLIENT_ID=
SLACK_CLIENT_SECRET=

# Google OAuth
GOOGLE_OAUTH_CLIENT_ID=
GOOGLE_OAUTH_CLIENT_SECRET=
GOOGLE_OAUTH_CALLBACK_URL=

### 仅在使用自定义构建移动应用时更改此环境变量
## 移动应用环境变量
IOS_APP_ID=L7YLMN4634.com.chatwoot.app
ANDROID_BUNDLE_ID=com.chatwoot.app

# https://developers.google.com/android/guides/client-auth （在第一部分中使用 keytool 打印指纹）
ANDROID_SHA256_CERT_FINGERPRINT=AC:73:8E:DE:EB:56:EA:CC:10:87:02:A7:65:37:7B:38:D4:5D:D4:53:F8:3B:FB:D3:C6:28:64:1D:AA:08:1E:D8

### 智能应用横幅
# https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/PromotingAppswithAppBanners/PromotingAppswithAppBanners.html
# 您可以在 https://itunesconnect.apple.com 中找到您的 app-id
#IOS_APP_IDENTIFIER=1495796682

## 推送通知
## 在此处生成新的密钥值：https://d3v.one/vapid-key-generator/
# VAPID_PUBLIC_KEY=
# VAPID_PRIVATE_KEY=
#
# 用于移动应用
# FCM_SERVER_KEY=

### APM 和错误监控配置
## Elastic APM
## https://www.elastic.co/guide/en/apm/agent/ruby/current/getting-started-rails.html
# ELASTIC_APM_SERVER_URL=
# ELASTIC_APM_SECRET_TOKEN=

## Sentry
# SENTRY_DSN=

## Scout
## https://scoutapm.com/docs/ruby/configuration
# SCOUT_KEY=YOURKEY
# SCOUT_NAME=YOURAPPNAME (Production)
# SCOUT_MONITOR=true

## NewRelic
# https://docs.newrelic.com/docs/agents/ruby-agent/configuration/ruby-agent-configuration/
# NEW_RELIC_LICENSE_KEY=
# 将此设置为 true 以允许 newrelic apm 发送日志
# 默认情况下这是关闭的
# NEW_RELIC_APPLICATION_LOGGING_ENABLED=

## Datadog
## https://github.com/DataDog/dd-trace-rb/blob/master/docs/GettingStarted.md#environment-variables
# DD_TRACE_AGENT_URL=

# MaxMindDB API 密钥用于下载 GeoLite2 城市数据库
# IP_LOOKUP_API_KEY=

## Rack Attack 配置
## 防止和限制滥用请求
# ENABLE_RACK_ATTACK=true
# RACK_ATTACK_LIMIT=300
# ENABLE_RACK_ATTACK_WIDGET_API=true
# 以逗号分隔的可信 IP 列表，绕过 Rack Attack 限流规则
# RACK_ATTACK_ALLOWED_IPS=127.0.0.1,::1,192.168.0.10

## 将 chatwoot 仅作为 API 服务器运行
## 将此值设置为 true 将禁用前端仪表板端点
# CW_API_ONLY_SERVER=false

# 如果您想使用官方移动应用，
# 通知将通过 Chatwoot 服务器转发
ENABLE_PUSH_RELAY_SERVER=true

# Stripe API 密钥
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=

# 如果您想使用签名 URL 将文件上传到云存储，请设置为 true
# 确保在设置为 true 后在云存储上遵循 https://edgeguides.rubyonrails.org/active_storage_overview.html#cross-origin-resource-sharing-cors-configuration
DIRECT_UPLOADS_ENABLED=

#MS OAUTH 凭证
AZURE_APP_ID=
AZURE_APP_SECRET=

## 高级配置
## 更改这些值以微调性能
# 控制 sidekiq 的并发设置
# SIDEKIQ_CONCURRENCY=10

# AI 驱动的功能
## OpenAI 密钥
# OPENAI_API_KEY=

# 维护/性能相关配置
# 如果您想移除陈旧的联系人收件箱，请设置为 true
# 超过 90 天没有对话的 contact_inboxes 将被移除
# REMOVE_STALE_CONTACT_INBOX_JOB_STATUS=false