version: '3'

services:
  base: &base
    image: chatwoot/chatwoot:latest
    env_file: .env.service.sjlpj.cn ## Domain environment variables
    volumes:
      - storage_data:/app/storage

  rails:
    <<: *base
    depends_on:
      - postgres
      - redis
    ports:
      - '127.0.0.1:30000:3000'  # 只监听本地，不对外暴露
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    restart: always

  sidekiq:
    <<: *base
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
    restart: always

  postgres:
    image: pgvector/pgvector:pg16
    restart: always
    ports:
      - '127.0.0.1:5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=421124

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass 421124"]
    env_file: .env.service.sjlpj.cn
    volumes:
      - redis_data:/data
    ports:
      - '127.0.0.1:6379:6379'

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/letsencrypt:/etc/letsencrypt:ro  # SSL 证书目录
      - nginx_logs:/var/log/nginx
    depends_on:
      - rails
    command: nginx -g 'daemon off;'

volumes:
  storage_data:
  postgres_data:
  redis_data:
  nginx_logs: